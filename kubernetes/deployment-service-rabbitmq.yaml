apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: online-event-booking-hamza-ahmed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5672  # RabbitMQ message broker port
            - containerPort: 15672 # Management UI port
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq/
            - name: rabbitmq-logs
              mountPath: /var/log/rabbitmq
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
        - name: rabbitmq-logs
          persistentVolumeClaim:
            claimName: rabbitmq-log-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: online-event-booking-hamza-ahmed
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp  # ✅ Added name for AMQP (Messaging) port
      protocol: TCP
      port: 5672
      targetPort: 5672
    - name: management  # ✅ Added name for RabbitMQ UI port
      protocol: TCP
      port: 15672
      targetPort: 15672
  type: ClusterIP  # Internal service for microservices to connect

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: online-event-booking-hamza-ahmed
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-log-pvc
  namespace: online-event-booking-hamza-ahmed
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

